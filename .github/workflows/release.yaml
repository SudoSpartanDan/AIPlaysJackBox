name: Release

on:
  release:
    types: [published]

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Extract version from tag (strip leading "v")
        id: get_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Build
        run: |
          curl -sSL https://install.python-poetry.org | python - -y
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false
          sed -i 's/^version = ".*"/version = "${{ steps.get_version.outputs.version }}"/' pyproject.toml
          poetry install --no-interaction
          poetry build
      - uses: actions/upload-artifact@v4
        with:
          name: distfiles
          path: dist/
          if-no-files-found: error

  upload-github:
    name: Upload (GitHub)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/download-artifact@v5
        with:
          name: distfiles
          path: dist/
      - run: gh release upload "${TAG_NAME}" dist/*.{tar.gz,whl}
        env:
          GH_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ github.event.release.tag_name }}

  upload-pypi:
    name: Upload (PyPI)
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/ai-plays-jackbox/
    permissions:
      id-token: write
    needs: build
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: distfiles
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
